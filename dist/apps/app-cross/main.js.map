{"version":3,"sources":["./apps/app-cross/src/app/components/payment/payment.component.html","./apps/app-cross/src/app/components/payment/payment.component.ts","./apps/app-cross/src/main.ts","./apps/app-cross/src/app/app.component.ts","./apps/app-cross/src/app/app.component.html","./apps/app-cross/src/environments/environment.ts","./apps/app-cross/src/app/app.module.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["\r\n<mat-card>\r\n  <mat-card-header>\r\n    <mat-card-title style='padding: 12px;'>Please select:</mat-card-title>\r\n  </mat-card-header>\r\n  <mat-card-content  *ngIf=pickCurr>\r\n    <p>\r\n      What currency you want to pay?\r\n    </p>\r\n    <div class='buttons'>\r\n    <button mat-button (click)='pickCurrency(\"local\")'>Local</button>\r\n    <button mat-button (click)='pickCurrency(\"USD\")'>USD</button>\r\n    </div>\r\n  </mat-card-content>\r\n  <mat-card-content  *ngIf=!pickCurr>\r\n    <p>\r\n      What are you from?\r\n    </p>\r\n    <form action=''>\r\n      <mat-form-field>\r\n        <mat-label>Country</mat-label>\r\n        <mat-select [(ngModel)]=\"selectedValue\" name=\"food\">\r\n          <mat-option *ngFor=\"let country of countries\" [value]=\"country.value\">\r\n            {{country.viewValue}}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </form>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-payment',\r\n  styleUrls: ['payment.component.scss'],\r\n  templateUrl: './payment.component.html'\r\n})\r\nexport class PaymentComponent {\r\n  pickCurr = true;\r\n  selectedValue: string;\r\n\r\n  countries = [\r\n    {value: 'France', viewValue: 'France', currency: 'ERU'},\r\n    {value: 'Moldova', viewValue: 'Moldova', currency: 'ERU'},\r\n    {value: 'Israel', viewValue: 'Israel', currency: 'ERU'}\r\n  ]\r\n  constructor() {\r\n  }\r\n\r\n  pickCurrency(type: string) {\r\n    this.pickCurr = !this.pickCurr\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'appcross-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent {\r\n  title = 'Cross Border Payments!';\r\n}\r\n","<header class=\"flex\">\r\n  <img\r\n    alt=\"Nx logo\"\r\n    width=\"75\"\r\n    src=\"https://nx.dev/assets/images/nx-logo-white.svg\"\r\n  />\r\n  <h1>Welcome to {{ title }}!</h1>\r\n</header>\r\n<div>\r\n  <h2>How you would like to pay?</h2>\r\n  <div class=\"flex github-star-container\">\r\n  <app-payment></app-payment>\r\n  </div>\r\n</div>\r\n\r\n<router-outlet></router-outlet>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { PaymentComponent } from './components/payment/payment.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent, PaymentComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    RouterModule.forRoot([], { initialNavigation: 'enabled' }),\r\n    BrowserAnimationsModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    FormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}