{"version":3,"sources":["./apps/app-cross/src/app/services/payment.service.ts","./apps/app-cross/src/app/components/payment/payment.component.ts","./apps/app-cross/src/app/components/payment/payment.component.html","./apps/app-cross/src/main.ts","./apps/app-cross/src/app/app.component.ts","./apps/app-cross/src/app/app.component.html","./apps/app-cross/src/environments/environment.ts","./apps/app-cross/src/app/app-routing.module.ts","./apps/app-cross/src/app/components/container/container.component.ts","./apps/app-cross/src/app/components/container/container.component.html","./apps/app-cross/src/app/app.module.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\nexport interface PaymentObj {\r\n  currency: string,\r\n  country: string,\r\n  settlementInstructions: {\r\n    bank: string,\r\n    currency: string,\r\n    correspondent: string\r\n  }\r\n  bank: {\r\n    name: string,\r\n    fromCCY: string,\r\n    toCCY: string,\r\n    rate: number,\r\n    expDate: string\r\n  }\r\n}\r\n\r\nexport const BankMap = {\r\n  CITIUS33: {\r\n    currency: {\r\n      EUR: 'DEUTDEFF',\r\n      GBR: 'CITIGB2L',\r\n      CAD: 'CITICATTBCH'\r\n    }\r\n  }\r\n};\r\n\r\nexport const currencyPerCountry = {\r\n  France: 'EUR',\r\n  Israel: 'ILS',\r\n  Moldova: 'EURO'\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PaymentService {\r\n\r\n  paymentObj: PaymentObj | null = {\r\n    bank: {\r\n      name: '',\r\n      fromCCY: '',\r\n      toCCY: '',\r\n      rate: 0,\r\n      expDate: ''\r\n    },\r\n    settlementInstructions: {\r\n      bank: '',\r\n      correspondent: '',\r\n      currency: ''\r\n    },\r\n    country: '',\r\n    currency: ''\r\n  };\r\n\r\n  constructor() {\r\n  }\r\n\r\n  setProperty(prop, value) {\r\n    this.paymentObj[prop] = value;\r\n  }\r\n\r\n  setSettlement(prop, value) {\r\n    this.paymentObj.settlementInstructions[prop] = value;\r\n  }\r\n\r\n  setBank(prop, value) {\r\n    this.paymentObj.bank[prop] = value;\r\n  }\r\n\r\n  getCorrespondent() {\r\n    if (this.paymentObj.currency === 'local') {\r\n      this.paymentObj.currency = currencyPerCountry[this.paymentObj.country];\r\n    } else {\r\n      this.paymentObj.currency = 'USD';\r\n    }\r\n    let corrsBank = BankMap[this.paymentObj.settlementInstructions.bank].currency[this.paymentObj.currency];\r\n    if (corrsBank) {\r\n      this.paymentObj.settlementInstructions.correspondent = corrsBank;\r\n    }\r\n    this.paymentObj.settlementInstructions.currency =  this.paymentObj.currency;\r\n      console.log(this.paymentObj)\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { PaymentService } from '../../services/payment.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-payment',\r\n  styleUrls: ['payment.component.scss'],\r\n  templateUrl: './payment.component.html'\r\n})\r\nexport class PaymentComponent implements OnInit {\r\n  pickCurr = true;\r\n  selectedValue: string;\r\n  merchData;\r\n  countries = [\r\n    { value: 'France', viewValue: 'France', currency: 'ERU' },\r\n    { value: 'Moldova', viewValue: 'Moldova', currency: 'ERU' },\r\n    { value: 'Israel', viewValue: 'Israel', currency: 'ERU' }\r\n  ];\r\n\r\n  constructor(private paymentService: PaymentService,\r\n              private activatedroute: ActivatedRoute,\r\n              private router: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.activatedroute.queryParams.subscribe(\r\n      (data) => {\r\n        console.log(data);\r\n        this.merchData = data;\r\n        this.paymentService.setSettlement('bank', data['bank']);\r\n      }\r\n    );\r\n  }\r\n\r\n  pickCurrency(type: string) {\r\n    this.paymentService.setProperty('currency', type);\r\n    this.pickCurr = !this.pickCurr;\r\n  }\r\n\r\n  selectedCountryChange(value) {\r\n    this.paymentService.setProperty('country', value);\r\n    this.paymentService.getCorrespondent();\r\n  }\r\n}\r\n","\r\n<mat-card>\r\n  <mat-card-header>\r\n    <mat-card-title style='padding: 12px;'>Please select:</mat-card-title>\r\n  </mat-card-header>\r\n  <mat-card-content  *ngIf=pickCurr>\r\n    <p>\r\n      What currency you want to pay?\r\n    </p>\r\n    <div class='buttons'>\r\n    <button mat-button (click)='pickCurrency(\"local\")'>Local</button>\r\n    <button mat-button (click)='pickCurrency(\"USD\")'>USD</button>\r\n    </div>\r\n  </mat-card-content>\r\n  <mat-card-content  *ngIf=!pickCurr>\r\n    <p>\r\n      Where are you from?\r\n    </p>\r\n    <form action=''>\r\n      <mat-form-field>\r\n        <mat-label>Country</mat-label>\r\n        <mat-select [(ngModel)]=\"selectedValue\" name=\"food\"  (selectionChange)=\"selectedCountryChange($event.value)\">\r\n          <mat-option *ngFor=\"let country of countries\" [value]=\"country.value\">\r\n            {{country.viewValue}}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </form>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'appcross-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent implements OnInit{\r\n  title = 'Cross Border Payments!';\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","\r\n\r\n<router-outlet></router-outlet>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ContainerComponent } from './components/container/container.component';\r\nconst routes: Routes = [\r\n  { path: 'bill', component: ContainerComponent }\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-container',\r\n  styleUrls: ['./container.component.scss'],\r\n  templateUrl: './container.component.html'\r\n})\r\nexport class ContainerComponent {\r\n  constructor() {\r\n  }\r\n\r\n  title = 'Cross Border Payments!';\r\n\r\n}\r\n","<header class=\"flex\">\r\n  <img\r\n    alt=\"Nx logo\"\r\n    width=\"75\"\r\n    src=\"https://nx.dev/assets/images/nx-logo-white.svg\"\r\n  />\r\n  <h1>Welcome to {{ title }}!</h1>\r\n</header>\r\n<div>\r\n  <h2>How you would like to pay?</h2>\r\n  <div class=\"flex github-star-container\">\r\n    <app-payment></app-payment>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { PaymentComponent } from './components/payment/payment.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { ContainerComponent } from './components/container/container.component';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent, PaymentComponent, ContainerComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    FormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}