{"version":3,"sources":["./apps/app-cross/src/app/services/payment.service.ts","./apps/app-cross/src/app/components/payment/payment.component.ts","./apps/app-cross/src/app/components/payment/payment.component.html","./apps/app-cross/src/main.ts","./apps/app-cross/src/app/app.component.ts","./apps/app-cross/src/app/app.component.html","./apps/app-cross/src/environments/environment.ts","./apps/app-cross/src/app/components/consent/consent.component.ts","./apps/app-cross/src/app/components/consent/consent.component.html","./apps/app-cross/src/app/components/courency-select/currency-select.component.ts","./apps/app-cross/src/app/components/courency-select/currency-select.component.html","./apps/app-cross/src/app/app-routing.module.ts","./apps/app-cross/src/app/components/container/container.component.html","./apps/app-cross/src/app/components/container/container.component.ts","./apps/app-cross/src/app/components/country-select/country-select.component.ts","./apps/app-cross/src/app/components/country-select/country-select.component.html","./apps/app-cross/src/app/app.module.ts","./apps/app-cross/src/app/components/calllback/callback.component.ts","./apps/app-cross/src/app/components/calllback/callback.component.html","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\nexport interface PaymentObj {\r\n  currency: string,\r\n  country: string,\r\n  settlementInstructions: {\r\n    bank: string,\r\n    currency: string,\r\n    correspondent: string\r\n  }\r\n  bank: string,\r\n  amount: string,\r\n  creditorName: string,\r\n  remittanceInformationUnstructured: string\r\n}\r\n\r\nexport interface PaymentSaltEdgeObj {\r\n  creditorName: string,\r\n  instructedAmount: {\r\n    amount: string,\r\n    currency: string\r\n  },\r\n  remittanceInformationUnstructured: string,\r\n  endToEndIdentification: string,\r\n  creditorAccount: {\r\n    iban: string,\r\n    bic: string\r\n  }\r\n}\r\n\r\nexport const BankMap = {\r\n  CITIUS33: {\r\n    currency: {\r\n      EUR: 'DEUTDEFF',\r\n      GBR: 'CITIGB2L',\r\n      CAD: 'CITICATTBCH'\r\n    }\r\n  },\r\n  AGRIFRPP: {\r\n    currency: {\r\n      USD: 'CHASUS33'\r\n    }\r\n  }\r\n};\r\n\r\nexport const currencyPerCountry = {\r\n  France: 'EUR',\r\n  Israel: 'ILS',\r\n  Moldova: 'EURO'\r\n};\r\n\r\nexport const bankNameToBIC = {\r\n  DEUTDEFF: 'DEUTDEFFXXX',\r\n  AGRIFRPP: 'AGRIFRPP881'\r\n}\r\n\r\nexport const bankNameToIBAN = {\r\n  DEUTDEFF: 'DE89370400440532013000',\r\n  AGRIFRPP: 'FR7611206000150002052067096'\r\n}\r\n\r\nexport const BankRates = {\r\n  DEUTDEFF: 0.8400,\r\n  AGRIFRPP: 0.8554\r\n}\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PaymentService {\r\n\r\n  paymentObj: PaymentObj | null = {\r\n    settlementInstructions: {\r\n      bank: '',\r\n      correspondent: '',\r\n      currency: ''\r\n    },\r\n    country: '',\r\n    currency: '',\r\n    bank: '',\r\n    amount: '',\r\n    creditorName: '',\r\n    remittanceInformationUnstructured: ''\r\n  };\r\n\r\n  paymentJson: PaymentSaltEdgeObj;\r\n\r\n  constructor(protected httpClient: HttpClient, private router: Router) {\r\n  }\r\n\r\n  setProperty(prop, value) {\r\n    this.paymentObj[prop] = value;\r\n  }\r\n\r\n  setSettlement(prop, value) {\r\n    this.paymentObj.settlementInstructions[prop] = value;\r\n  }\r\n\r\n  setBank(value) {\r\n    this.paymentObj.bank = value;\r\n  }\r\n\r\n  setCurrency(value) {\r\n    if (value === 'local') {\r\n     this.paymentObj.currency = currencyPerCountry[this.paymentObj.country]\r\n    } else {\r\n      this.paymentObj.currency = value\r\n    }\r\n\r\n  }\r\n\r\n  getCorrespondent() {\r\n    if (this.paymentObj.currency === 'local') {\r\n      this.paymentObj.currency = currencyPerCountry[this.paymentObj.country];\r\n    } else {\r\n      this.paymentObj.currency = 'USD';\r\n    }\r\n    let corrsBank = BankMap[this.paymentObj.settlementInstructions.bank].currency[this.paymentObj.currency];\r\n    if (corrsBank) {\r\n      this.paymentObj.settlementInstructions.correspondent = corrsBank;\r\n    }\r\n    this.paymentObj.settlementInstructions.currency =  this.paymentObj.currency;\r\n      console.log(this.paymentObj)\r\n  }\r\n\r\n  preprareJSON() {\r\n    let jsonSaltEdge: PaymentSaltEdgeObj = {\r\n      creditorAccount: { bic: '', iban: '' },\r\n      creditorName: '',\r\n      endToEndIdentification: '',\r\n      instructedAmount: { amount: '', currency: '' },\r\n      remittanceInformationUnstructured: ''\r\n\r\n    };\r\n    if ( this.paymentObj.currency === 'EUR') {\r\n      jsonSaltEdge.creditorName = this.paymentObj.creditorName;\r\n      jsonSaltEdge.instructedAmount.currency = this.paymentObj.currency;\r\n      jsonSaltEdge.endToEndIdentification = uuidv4();\r\n      jsonSaltEdge.remittanceInformationUnstructured = this.paymentObj.remittanceInformationUnstructured;\r\n      jsonSaltEdge.creditorAccount.iban = bankNameToIBAN[BankMap[this.paymentObj.settlementInstructions.bank].currency[this.paymentObj.currency]];\r\n      jsonSaltEdge.creditorAccount.bic = bankNameToBIC[BankMap[this.paymentObj.settlementInstructions.bank].currency[this.paymentObj.currency]];\r\n      jsonSaltEdge.instructedAmount.amount =  (Number(BankRates[BankMap[this.paymentObj.settlementInstructions.bank].currency[this.paymentObj.currency]]) * Number(this.paymentObj.amount)).toString();\r\n\r\n    }\r\n\r\n    if (this.paymentObj.currency === 'USD') {\r\n      jsonSaltEdge.creditorName = this.paymentObj.creditorName;\r\n      jsonSaltEdge.instructedAmount.amount = this.paymentObj.amount;\r\n      jsonSaltEdge.instructedAmount.currency = 'EUR';\r\n      jsonSaltEdge.endToEndIdentification = uuidv4();\r\n      jsonSaltEdge.remittanceInformationUnstructured = this.paymentObj.remittanceInformationUnstructured;\r\n      jsonSaltEdge.creditorAccount.iban = bankNameToIBAN[this.paymentObj.bank];\r\n      jsonSaltEdge.creditorAccount.bic = bankNameToBIC[this.paymentObj.bank];\r\n      jsonSaltEdge.instructedAmount.amount = (Number(BankRates[this.paymentObj.bank]) * Number(this.paymentObj.amount)).toString();\r\n\r\n    }\r\n    console.log(jsonSaltEdge)\r\n    this.paymentJson = jsonSaltEdge;\r\n  }\r\n\r\n  getPaymentData() {\r\n    return this.paymentJson;\r\n  }\r\n\r\n  calculateLocalAndUsd() {\r\n    return {\r\n      EUR:  (Number(BankRates[BankMap[this.paymentObj.settlementInstructions.bank].currency['EUR']]) * Number(this.paymentObj.amount)).toString(),\r\n      USD: (Number(BankRates[this.paymentObj.bank]) * Number(this.paymentObj.amount)).toString()\r\n    }\r\n  }\r\n\r\n  flushData() {\r\n    this.paymentJson = {} as any;\r\n  }\r\n\r\n  createQueryParams() {\r\n   let  obj = {creditor_name: this.paymentJson.creditorName,\r\n    instructed_amount: this.paymentJson.instructedAmount.amount,\r\n    instructed_currency: this.paymentJson.instructedAmount.currency,\r\n    remittance_information_unstructured: this.paymentJson.remittanceInformationUnstructured,\r\n    end_to_end_identification: this.paymentJson.endToEndIdentification,\r\n    creditor_account_iban: this.paymentJson.creditorAccount.iban}\r\n    let query = this.createQueryString(obj);\r\n    window.location.href = `https://finastra-hkt.herokuapp.com/?${query}`;\r\n  }\r\n  createQueryString = (data) => {\r\n\r\n    return Object.keys(data).map(key => {\r\n      let val = data[key]\r\n      if (val !== null && typeof val === 'object') val = this.createQueryString(val)\r\n      return `${key}=${encodeURIComponent(`${val}`.replace(/\\s/g, '_'))}`\r\n    }).join('&')\r\n  }\r\n}\r\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { PaymentService } from '../../services/payment.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-payment',\r\n  styleUrls: ['payment.component.scss'],\r\n  templateUrl: './payment.component.html'\r\n})\r\nexport class PaymentComponent implements OnInit {\r\n\r\n  @Output() isConsent: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  pickCurr = true;\r\n  merchData;\r\n  isBankSelected = false;\r\n  isCurrencySelect = false;\r\n\r\n  constructor(private paymentService: PaymentService,\r\n              private activatedroute: ActivatedRoute,\r\n              private router: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.activatedroute.queryParams.subscribe(\r\n      (data) => {\r\n        console.log(data);\r\n        this.merchData = data;\r\n        this.paymentService.setSettlement('bank', data['bank']);\r\n        this.paymentService.setProperty('creditorName', data['creditorName']);\r\n        this.paymentService.setProperty('amount', data['amount']);\r\n        this.paymentService.setProperty('remittanceInformationUnstructured', data['remittanceInformationUnstructured']);\r\n      }\r\n    );\r\n  }\r\n\r\n  bankSelected(bool) {\r\n    this.isBankSelected = bool;\r\n    this.isCurrencySelect = true;\r\n  }\r\n\r\n  currencySelected(event) {\r\n    this.paymentService.preprareJSON();\r\n    this.isCurrencySelect = false;\r\n    // this.isConsent.emit(true);\r\n    this.paymentService.createQueryParams();\r\n  }\r\n}\r\n","<div class='title'>Please select:</div>\r\n<div class='country-select'>\r\n  <app-country-select\r\n    (bankSelected)='bankSelected($event)'\r\n  ></app-country-select>\r\n</div>\r\n\r\n<div class='currency-select' *ngIf='isCurrencySelect'>\r\n  <app-currency-select\r\n    (currencySelected)='currencySelected($event)'\r\n  ></app-currency-select>\r\n</div>\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'appcross-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent implements OnInit{\r\n  title = 'Cross Border Payments!';\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","\r\n\r\n<router-outlet></router-outlet>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { PaymentSaltEdgeObj, PaymentService } from '../../services/payment.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-consent',\r\n  templateUrl: './consent.component.html',\r\n  styleUrls: ['./consent.component.scss']\r\n})\r\nexport class ConsentComponent implements OnInit{\r\n  @Output() buttonClicked: EventEmitter<any> = new EventEmitter<any>();\r\n  paymentData: PaymentSaltEdgeObj;\r\n\r\n  constructor(private paymentService: PaymentService) {\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.paymentData = this.paymentService.getPaymentData();\r\n  }\r\n\r\n  cancelButton() {\r\n    this.paymentService.flushData();\r\n    this.buttonClicked.emit('cancel');\r\n  }\r\n\r\n  submitButton() {\r\n    this.paymentService.createQueryParams();\r\n  }\r\n}\r\n","<div class='container'>\r\n  <div class='title'>Consent</div>\r\n  <div class='main'>\r\n    <h3> Almost done,</h3>\r\n    <h3>We will need you to pay now from your bank. We will need you to provide a consent to SaltEdge Pay application.\r\n      These are the details that we will share with Salt Edge Pay:</h3>\r\n  </div>\r\n  <div class='payment-data'>\r\n    <mat-grid-list cols='4' rowHeight='40px'>\r\n      <mat-grid-tile\r\n        [colspan]='1'\r\n        [rowspan]='1'\r\n      >Payee\r\n      </mat-grid-tile>\r\n      <mat-grid-tile\r\n        [colspan]='3'\r\n        [rowspan]='1'\r\n      >{{paymentData.creditorAccount.bic}}</mat-grid-tile>\r\n      <mat-grid-tile\r\n        [colspan]='1'\r\n        [rowspan]='1'\r\n      >IBAN\r\n      </mat-grid-tile>\r\n      <mat-grid-tile\r\n        [colspan]='3'\r\n        [rowspan]='1'\r\n      >{{paymentData.creditorAccount.iban}}</mat-grid-tile>\r\n      <mat-grid-tile\r\n        [colspan]='1'\r\n        [rowspan]='1'\r\n      >Reference\r\n      </mat-grid-tile>\r\n      <mat-grid-tile\r\n        [colspan]='3'\r\n        [rowspan]='1'\r\n      >{{paymentData.creditorAccount.bic}}</mat-grid-tile>\r\n      <mat-grid-tile\r\n        [colspan]='1'\r\n        [rowspan]='1'\r\n      >Amount\r\n      </mat-grid-tile>\r\n      <mat-grid-tile\r\n        [colspan]='3'\r\n        [rowspan]='1'\r\n      >{{paymentData.instructedAmount.amount}} EUR</mat-grid-tile>\r\n    </mat-grid-list>\r\n  </div>\r\n  <div class='buttons'>\r\n    <button mat-stroked-button color='primary' class='custom-button' (click)='cancelButton()'>Cancel</button>\r\n    <button mat-stroked-button color='primary' class='custom-button' (click)='submitButton()'>Confirm</button>\r\n  </div>\r\n</div>\r\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { PaymentService } from '../../services/payment.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-currency-select',\r\n  styleUrls: ['./currency-select.component.scss'],\r\n  templateUrl: './currency-select.component.html'\r\n})\r\nexport class CurrencySelectComponent implements OnInit{\r\n\r\n  @Output() currencySelected: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  amountPerCurr;\r\n\r\n  constructor(private paymentService: PaymentService) {\r\n  }\r\n\r\n  pickCurrency(type: string) {\r\n    this.paymentService.setCurrency(type);\r\n    this.currencySelected.emit(true);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.amountPerCurr = this.paymentService.calculateLocalAndUsd();\r\n  }\r\n}\r\n","<div>\r\n  <div class='title-currency'>What currency you want to pay?</div>\r\n  <div class='excenge-rates'>\r\n    <mat-grid-list cols='1' rowHeight='40px'>\r\n      <mat-grid-tile>\r\n        <button mat-stroked-button color='primary' class='custom-button' (click)='pickCurrency(\"local\")'>EUR:   {{amountPerCurr.EUR}} EUR\r\n        </button>\r\n      </mat-grid-tile>\r\n      <mat-grid-tile>\r\n        <button mat-stroked-button color='primary' class='custom-button' (click)='pickCurrency(\"USD\")'>USD:  {{amountPerCurr.USD}} EUR\r\n        </button>\r\n      </mat-grid-tile>\r\n    </mat-grid-list>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ContainerComponent } from './components/container/container.component';\r\nimport { CallbackComponent } from './components/calllback/callback.component';\r\nconst routes: Routes = [\r\n  { path: 'bill', component: ContainerComponent },\r\n  { path: 'callback', component: CallbackComponent}\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","<header class='flex'>\r\n  <img\r\n    alt='Nx logo'\r\n    width='75'\r\n    src='https://nx.dev/assets/images/nx-logo-white.svg'\r\n  />\r\n  <h1>{{ title }}!</h1>\r\n</header>\r\n<div *ngIf='!isConsent'>\r\n  <div class='main-text'>By paying directly from your bank account we guaranty the best foreign exchange rates. Just few questions to find\r\n    the best rate.</div>\r\n  <div class='flex github-star-container'>\r\n    <app-payment\r\n      (isConsent)='setConsentView()'\r\n    ></app-payment>\r\n  </div>\r\n</div>\r\n<!--  <div class='consent-select' *ngIf='isConsent'>-->\r\n<!--    <app-consent-->\r\n<!--      (buttonClicked)='onButtonConsentClicked($event)'-->\r\n<!--    ></app-consent>-->\r\n<!--  </div>-->\r\n\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-container',\r\n  styleUrls: ['./container.component.scss'],\r\n  templateUrl: './container.component.html'\r\n})\r\nexport class ContainerComponent {\r\n\r\n  isConsent = false;\r\n  constructor() {\r\n  }\r\n\r\n  title = 'BB Bistro Rapid Pay';\r\n\r\n  setConsentView() {\r\n    this.isConsent = true;\r\n  }\r\n}\r\n","import { Component, EventEmitter, Output } from '@angular/core';\r\nimport { PaymentService } from '../../services/payment.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-country-select',\r\n  templateUrl: './country-select.component.html',\r\n  styleUrls: ['./country-select.component.scss']\r\n})\r\nexport class CountrySelectComponent {\r\n\r\n  selectedValue: string;\r\n  isSelectBank = false;\r\n  @Output() bankSelected: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n  constructor(\r\n    private paymentService: PaymentService\r\n  ) {\r\n  }\r\n\r\n  countries = [\r\n    { value: 'France', viewValue: 'France', currency: 'ERU' },\r\n    { value: 'Moldova', viewValue: 'Moldova', currency: 'ERU' },\r\n    { value: 'Israel', viewValue: 'Israel', currency: 'ERU' }\r\n  ];\r\n\r\n  banks = [\r\n    { value: 'AGRIFRPP', viewValue: 'Fake Bank', currency: 'ERU' }\r\n  ];\r\n\r\n  selectedCountryChange(value) {\r\n    this.paymentService.setProperty('country', value);\r\n    this.isSelectBank = true;\r\n    // this.paymentService.getCorrespondent();\r\n  }\r\n\r\n  selectedBankChange(value) {\r\n    this.paymentService.setBank(value);\r\n    this.bankSelected.emit(true)\r\n  }\r\n}\r\n","<div class='title'>Where are you from?</div>\r\n<form class=country-selections action=''>\r\n  <mat-form-field>\r\n    <mat-label>Country</mat-label>\r\n    <mat-select [(ngModel)]='selectedValue' name='food' (selectionChange)='selectedCountryChange($event.value)'>\r\n      <mat-option *ngFor='let country of countries' [value]='country.value'>\r\n        {{country.viewValue}}\r\n      </mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n  <mat-form-field *ngIf='isSelectBank'>\r\n    <mat-label>Bank name</mat-label>\r\n    <mat-select [(ngModel)]='selectedValue' name='food' (selectionChange)='selectedBankChange($event.value)'>\r\n      <mat-option *ngFor='let bank of banks' [value]='bank.value'>\r\n        {{bank.viewValue}}\r\n      </mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n</form>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { PaymentComponent } from './components/payment/payment.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { ContainerComponent } from './components/container/container.component';\r\nimport { CountrySelectComponent } from './components/country-select/country-select.component';\r\nimport { CurrencySelectComponent } from './components/courency-select/currency-select.component';\r\nimport { ConsentComponent } from './components/consent/consent.component';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { CallbackComponent } from './components/calllback/callback.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent, PaymentComponent, ContainerComponent, CountrySelectComponent,\r\n    CurrencySelectComponent,\r\n    ConsentComponent,\r\n    CallbackComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    FormsModule,\r\n    MatGridListModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nexport interface ResponseFromServer {\r\n  endToEndIdentification: string,\r\n  message: string,\r\n  status: string\r\n}\r\n\r\n@Component({\r\n  selector: 'app-callback',\r\n  styleUrls: ['./callback.component.scss'],\r\n  templateUrl: './callback.component.html'\r\n})\r\nexport class CallbackComponent implements OnInit {\r\n\r\n  message;\r\n  isSuccess = false;\r\n  responseFromServer: ResponseFromServer;\r\n  title = 'BB Bistro Rapid Pay';\r\n\r\n  constructor(private activatedroute: ActivatedRoute) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.activatedroute.queryParams.subscribe(\r\n      (data: ResponseFromServer) => {\r\n        this.responseFromServer = data\r\n        if (data.status === '1') {\r\n          this.isSuccess = true;\r\n          this.message = 'Thank you, your order have been successfully paid.'\r\n        }\r\n        if (data.status === '0') {\r\n          this.message = 'Please scan again QR code.'\r\n        }\r\n        console.log(data);\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","<header class='flex'>\r\n  <img\r\n    alt='Nx logo'\r\n    width='75'\r\n    src='https://nx.dev/assets/images/nx-logo-white.svg'\r\n  />\r\n  <h1>{{ title }}!</h1>\r\n</header>\r\n<div class='container'>\r\n  <div class='position-succsess' *ngIf='isSuccess'>\r\n    <div class='success-checkmark'>\r\n      <div class='check-icon'>\r\n        <span class='icon-line line-tip'></span>\r\n        <span class='icon-line line-long'></span>\r\n        <div class='icon-circle'></div>\r\n        <div class='icon-fix'></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class='main-text'>\r\n    {{message}}\r\n  </div>\r\n</div>\r\n\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}